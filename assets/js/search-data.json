{
  
    
        "post0": {
            "title": "희석, 흡광도 측정, 검량선 작성",
            "content": "고농도의 표준용액을 희석하여 검량선을 만들 수 있다. KMnO4와 같은 물질이 있다고 가정해보자. 이 때 Mn에 대한 정량적 표준용액을 만들기 위해서는 필수적으로 원하는 성분인 Mn의 정량을 위해 농도를 계산해야 한다. 이번 실험 노트에서는 표준용액을 만들기 위한 농도를 계산하는 법과 함께, 희석한 용액을 spectrophotometer를 이용하여 흡광도를 측정하고, 검량선을 작성하는 것에 대해 다루고자 한다. . parts-per notation . &#48177;&#48516;&#50984;(parts per hundred) . 용액 100mL에 대한 성분의 무게(g): W/V % | 기체 100mL에 대한 성분의 무게(g): W/V % | 용액 100mL에 대한 성분의 용량(mL): V/V % | 기체 100mL에 대한 성분의 용량(mL): V/V % | 용액 100g에 대한 성분의 용량(mL): V/W % | 용액 100g에 대한 성분의 무게(g): W/V % | . &#52380;&#48516;&#50984;(parts per thousand: ppt): g/L, g/kg . &#48177;&#47564;&#48516;&#50984;(parts per million: ppm): mg/L, mg/kg . 주로 대기나 해수, 지각 등에 존재하는 미량 성분의 농도를 나타낼 때 사용된다. | mg은 10^(-3), L는 10^3이므로, 1/10(6)이 된다. | kg단위는 액체에서는 L단위와 같다. | . &#49901;&#50613;&#48516;&#50984;(parts per billion: ppb): &#956;g/L, &#956;g/kg . &#55137;&#44305;&#44228;&#49688; . 흡광도 A는 다음과 같이 정의된다. . . 우리는 흡광도를 측정했다. b는 cell의 길이이고, c는 농도일 때, 흡광계수 ε을 알아낼 수 있다. 흡광계수는 같은 물질이면 같은 값을 갖는 것이 정상이다. 흡광계수 ε을 구하려면, . . 위 수식을 이용한다. 이 노트에서 b는 1, c는 10으로 고정한다. . &#44592;&#44592; &#49324;&#50857;&#48277; . &#48516;&#44305;&#44305;&#46020;&#44228;(spectrophotometer) . 기기: humancorp사의 X-ma 3000PC SPECTROPHOTOMETER | . 전원ON → warming up 20min → warm up 종료 후 → ESC 버튼 → 준비 완료 소리 울림 . . 값을 안정적으로 읽어들이기 위해선 램프의 안정화가 필요하다. 램프 안정화에 20분 정도 걸리므로 분광광도계를 사용하기 전에 미리 켜놓는 것이 좋다. | 해당 기기는 오른쪽 위의 D2, W가 표시되어 있다. 둘 다 램프의 상태를 의미한다. D2는 자외선(UV)을 발생시키는 램프, W는 가시광선을 발생시키는 램프다. 내부에는 램프, 모노크로메이터(파장선택부), 미러, 디텍터, 시료를 놓는 곳 등으로 이루어져 있다. 우리가 파장을 설정하면, 램프에서 발생된 빛이 설정된 파장에 맞춰 시료를 통과하도록 미러가 조정된다. | . 여러 모드가 있다. . basic mode: 원하는 파장을 설정하여, 일정한 파장에서 흡광도를 분석하는 것 | quantitative mode: 정량분석시 사용. 미지농도를 산출해준다. | wavelength scan: 시료가 어느 파장에서 가장 잘 감지되는지를 찾을 때 사용한다. USB 꽂은 후, 기기에 USB가 인식되면 해당 기능을 통해 데스크탑에서 UV-vis Analyst 프로그램을 통해 가장 높은 파장(λmax)을 보이는 지점을 알 수 있다. 그 지점에 해당하는 파장을 이용하여 흡광도를 측정해야 한다. | . . &#55137;&#44305;&#46020; &#48516;&#49437; . basic mode → Enter 버튼 → 기기가 자동으로 Blanking부터 시작함. 만약 Blank를 넣지 않은 상태라면, Blank → 기기 내부에 삽입 → 0Abs 버튼: +-0.000 Abs가 뜨면 완료. | 만약 다른 파장으로 변경한다면, blanking을 다시 해야 한다. gotoλ 버튼 → 설정 하려는 파장의 숫자 입력 → Enter 버튼 → 설정 완료 후, 0Abs 버튼 | . &#54028;&#51109; &#48516;&#49437; . wavelength mode → Enter 버튼 → 장파, 단파 설정을 위해 setup 위치의 버튼 → 원하는 파장, scan step, scan speed 입력: 1000, 190, 1(default), MEDIUM(default) → USB 삽입 → USB 삽입 아이콘 확인 → 파장을 파악하려는 시료 투입 → Start → 측정 완료 후 USB 저장을 위해, save 버튼 → 파일 이름 입력 → UV-vis Analyst 프로그램 → File → Open → 파일 확장자 .wav로 변경 → 파일 선택 → View → Peaks → Settings → Display Range Setup → x축 range 설정 | WL: wave length. WL이 900으로 설정된 후, 190까지 읽어나가면서 그래프를 그린다. | 셀의 종류에 따라서 민감하게 반응하는 파장이 다르다. 셀마다 재질이 다르기 때문이다. | . &#49892;&#54744; &#44284;&#51221; . KMnO4 시약 → Mn 용액 만들기 Mn 용액의 농도: 500mg/L (500ppm) | . | 중간농도 용액 만들기 100ppm | . | 중간농도 용액 → 100mL 부피플라스크에 희석 용액 만들기 1.0ppm, 5.0ppm, 10.0ppm, 20.0ppm 20mL kMnO4 + D.W. 80mL | 10mL kMnO4 + D.W. 90mL | 5mL kMnO4 + D.W. 95mL | 1mL kMnO4 + D.W. 99mL | . | 희석 용액은 내림차순으로 제조해야 함 | . | . . 20mg/L 용액 → 셀 → spectrophotometer &amp; USB → UV-Vis Analyst 프로그램: 파장대 파악 515nm로 나왔음 UV-vis wav 파일 | . | . | . spectrophotomoter로 흡광도 측정 및 검량선 작성 D.W. → spectrophotometer: blanking | 농도의 오름차순으로 흡광도를 측정하였음 | 셀 세척 시, 1) 털지 말기 2) 정방향으로 들지 말기 → 책상 위에 휴지를 놓고 탁탁 치기: 휴지로 셀 겉면을 문지르면 분진으로 인해 흡광도에 영향을 줄 수 있다. | . | . &#44208;&#44284; . &#55137;&#44305;&#46020; &#52769;&#51221; &#44208;&#44284; . &#55137;&#44305;&#44228;&#49688; &#49328;&#52636; &#44208;&#44284; . &#44160;&#47049;&#49440; . &#44160;&#47049;&#49440; &#51089;&#49457; &#53076;&#46300;(python) . 엑셀로 작성 시, 삽입 → 차트 → 분산형을 선택한다. | . import numpy as np import pandas as pd import matplotlib.pyplot as plt from sklearn.linear_model import LinearRegression from sklearn.metrics import r2_score import math . . def plot_working_curve(time, DATA, member, legend, x_label, y_label, x_posision, y_position_1, y_position_2): DATA_np = np.array(DATA) slope, y_intercept = np.polyfit(time,DATA_np,1) # m*x + b, m과 b를 return poly1d_fn = np.poly1d([slope, y_intercept]) f1 = plt.figure(figsize=(15, 17)) plt.title(&quot;Serial Dilution-&quot;+member) plt.rc(&#39;font&#39;, size=20) plt.rc(&#39;xtick&#39;, labelsize=20) plt.rc(&#39;ytick&#39;, labelsize=20) y1 = np.array(slope)*time + np.array(y_intercept) R_squared_value = r2_score(y1, DATA) plt.subplot(3,1,1) plt.plot(time, DATA, color=&#39;black&#39;, marker=&#39;o&#39;, linestyle=&#39; &#39;, linewidth=2, markersize=12, alpha=.5, label=&quot;1st&quot;) plt.plot(time,DATA_np, &#39;ko&#39;, time, poly1d_fn(time), &#39;-k&#39;) ##### SAMPLE ##### # sample A(1.0, 5.0, 10.0, 20.0) plt.text(x_posision, y_position_1, &quot;R squred value: {:1.4f}&quot;.format(R_squared_value), fontsize=13) plt.text(x_posision, y_position_2, &quot;y={:1.4f}x+({:1.4f})&quot;.format(slope, y_intercept), fontsize=13) # sample B(0.2, 0.4, 0.8) # plt.text(0.7, 0.08, &quot;R squred value: {:1.4f}&quot;.format(R_squared_value), fontsize=13) # plt.text(0.7, 0.07, &quot;y={:1.4f}x+({:1.4f})&quot;.format(slope, y_intercept), fontsize=13) ################## plt.grid(True, lw = 2, ls = &#39;--&#39;, c = &#39;.85&#39;) plt.xlabel(x_label) plt.ylabel(y_label) plt.legend(fontsize=&#39;medium&#39;) # txt=&quot;Figure 2. caption {}.&quot;.format(member) # plt.text(5, 0.15, txt, ha=&#39;center&#39;, size=17) plt.xlabel(x_label) plt.ylabel(y_label) plt.grid(True, lw = 2, ls = &#39;--&#39;, c = &#39;.85&#39;) return slope, y_intercept . . def plot_graph(member, x_axis_scale, DATA_set, dilution_times, x_posision, y_position_1, y_position_2): slope, y_intercept = plot_working_curve(time=x_axis_scale, DATA=DATA_set[0], member=member, legend=&quot;BSA(buffer: D.W.)&quot;, x_label=&quot;sample(mg/L)&quot;, # sample A(1.0, 5.0, 10.0, 20.0) # x_label=&quot;sample(μg/L)&quot;, # sample B(0.2, 0.4, 0.8) y_label=&quot;O.D. (515nm)&quot;, x_posision = x_posision, y_position_1 = y_position_1, y_position_2 = y_position_2) . . &#44160;&#47049;&#49440; &#51089;&#49457; &#44208;&#44284; . if __name__ == &quot;__main__&quot;: member = &quot;Kwon DoHyung&quot; # sample A(1.0, 5.0, 10.0, 20.0) x_axis_scale = [0.1, 5.0, 10.0, 20.0] DATA_set = [[0.122,0.682,1.328,2.482]] dilution_times = 4 x_posision = 17 y_position_1 = 1.5 y_position_2 = 1.25 plot_graph(member, x_axis_scale, DATA_set, dilution_times, x_posision, y_position_1, y_position_2) . R^2값이 0.9996으로 나왔다. R^2값은 0.99이상이 나오면 이상적이라고 할 수 있으므로 20.0 → 10.0 → 5.0 → 1.0 으로 적절히 희석되었다고 할 수 있다. . 10ppm 용액 → 50mL 부피플라스크에 희석 용액 만들기 0.2ppm, 0.4ppm, 0.8ppm 1mL kMnO4 + D.W. 9mL | 2mL kMnO4 + D.W. 8mL | 4mL kMnO4 + D.W. 6mL | . | 농도의 오름차순으로 흡광도를 측정하였음 | D.W. → spectrophotometer: blanking | 농도의 오름차순으로 흡광도를 측정하였음 | . | . . spectrophotomoter로 흡광도 측정 및 검량선 작성 | . &#44208;&#44284; . &#55137;&#44305;&#46020; &#52769;&#51221; &#44208;&#44284; . &#55137;&#44305;&#44228;&#49688; &#49328;&#52636; &#44208;&#44284; . &#44160;&#47049;&#49440; &#51089;&#49457; &#44208;&#44284; . if __name__ == &quot;__main__&quot;: member = &quot;Kwon Do Hhyung&quot; # sample B(0.2, 0.4, 0.8) x_axis_scale = [0.2, 0.4, 0.8] DATA_set = [[0.02,0.047,0.099]] dilution_times = 3 x_posision = 0.7 y_position_1 = 0.08 y_position_2 = 0.07 plot_graph(member, x_axis_scale, DATA_set, dilution_times, x_posision, y_position_1, y_position_2) . R^2값이 0.9999로 나왔다. 0.2 → 0.4 → 0.8로 적절히 희석되었다고 할 수 있다. . &#49892;&#54744; &#49324;&#51652; . Reference . https://ko.wikipedia.org/wiki/Ppm | .",
            "url": "https://tfedohk.github.io/dohk/serial-dilution-and-plot-working-curve/",
            "relUrl": "/serial-dilution-and-plot-working-curve/",
            "date": " • Sep 22, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "NGS 관련 소프트웨어 설치",
            "content": "이 노트는 NGS 설치 메뉴얼이다. 설치하고자 하는 SW는 다음과 같다. 각 파일을 다운로드 할 수 있는 링크도 함께 달았다. . bwa: 다운로드 또는 latest version | samtools: 다운로드 또는 latest version | picard: 다운로드 또는 latest version | gatk: 다운로드 또는 latest version | trimmomatic: 다운로드 또는 latest version | . &#49444;&#52824;&#50640; &#50526;&#49436; . 모든 과정은 터미널에서 이루어진다. 모든 설치 파일은 /home/user 폴더에 있다고 가정한다. . BWA . &#49444;&#52824; &#47749;&#47161;&#50612; . sudo tar -xvf bwa-0.7.17.tar.bz2 cd bwa-0.7.17 sudo make /.bwa # 결과 확인 pwd #path 복사 sudo vi ~/.bashrc # 맨 아래로 이동 후, i를 눌러 insert 모드로 변경 한 다음, 아래의 내용 추가 export PATH=(달러표시)PATH:[복사한 path 붙여넣기. 괄호는 제거]:(달러표시)PATH # esc-&gt;:wq-&gt;엔터 source ~/.bashrc bwa # 결과 확인 cd .. rm bwa-0.7.17.tar.bz2 . &#44208;&#44284; &#54868;&#47732; . SAMtools . &#49444;&#52824; &#47749;&#47161;&#50612; . tar -xvjf samtools-1.10.tar.bz2 cd samtools-1.10/ sudo apt-get install libncurses5-dev libncursesw5-dev -y # [option 1] sudo apt-get install libbz2-1.0 libbz2-dev libbz2-ocaml libbz2-ocaml-dev -y # [option 2] apt-get install -y liblzma-dev -y # [option 3] sudo apt-get install libcurl4-openssl-dev # [option 4] sudo make ./samtools # 결과 확인 pwd # path 복사 sudo vi ~/.bashrc # 맨 아래로 이동 후, i를 눌러 insert 모드로 변경 한 다음, 아래의 내용 추가 export PATH=(달러표시)PATH:[복사한 path 붙여넣기. 괄호는 제거]:(달러표시)PATH # esc-&gt;:wq-&gt;엔터 source ~/.bashrc samtools cd .. rm samtools-1.10.tar.bz2 . 그냥 sudo make만 진행했을 때 다음의 오류가 발생한다. 따라서 option으로 주석을 단 부분들을 먼저 설치하고 진행하는 것을 추천한다. . curses.h &#50640;&#47084; . bzlib.h &#50640;&#47084; . lzma.h &#50640;&#47084; . curl/curl.h &#50640;&#47084; . &#44208;&#44284; &#54868;&#47732; . Picard . &#49444;&#52824; &#47749;&#47161;&#50612; . picard는 java 기반의 프로그램이다. picard 뿐만 아니라 NGS와 관련된 다른 SW들도 다수가 jar의 JVM 실행파일들이다. 따라서 java의 버전을 확인하여 java가 설치되어 있지 않다면 설치해주어야 한다. . java installation . java -version sudo apt install default-jre -y . picard . java -jar picard.jar # 결과 확인 pwd # path 복사 sudo vi ~/.bashrc # 맨 아래로 이동 후, i를 눌러 insert 모드로 변경 한 다음, 아래의 내용 추가 export PICARD=[복사한 path 붙여넣기. 괄호는 제거]/picard.jar # esc-&gt;:wq-&gt;엔터 source ~/.bashrc java -jar (달러표시)PICARD # 결과 확인 cd .. . &#44208;&#44284; &#54868;&#47732; . GATK . &#49444;&#52824; &#47749;&#47161;&#50612; . unzip gatk-4.1.8.1.zip cd gatk-4.1.8.1/ ./gatk # 결과 확인 java -jar gatk-package-4.1.8.1-local.jar # 결과 확인 pwd # path 복사 sudo vi ~/.bashrc # 맨 아래로 이동 후, i를 눌러 insert 모드로 변경 한 다음, 아래의 내용 추가 export GATK=[복사한 path 붙여넣기. 괄호는 제거]/gatk-package-4.1.8.1-local.jar export PATH=(달러표시)PATH:[복사한 path 붙여넣기. 괄호는 제거]:(달러표시)PATH # esc-&gt;:wq-&gt;엔터 source ~/.bashrc gatk # 결과 확인 java -jar (달러표시)GATK # 결과 확인 . &#44208;&#44284; &#54868;&#47732; . GATK를 실행하는 방법은 두 가지다. 하나는 gatk를 그냥 치면 sh 스크립트가 실행되어 프로그램이 실행되고, 다른 하나는 jar를 이용해 자바 프로그램으로 실행하는 것이다. 두 가지 결과가 모두 아래에 나와있다. . &#49892;&#54665; &#48169;&#48277;1: gatk &#49892;&#54665; . &#49892;&#54665; &#48169;&#48277;2: gatk jar&#49892;&#54665; . Trimmomatic . &#49444;&#52824; &#47749;&#47161;&#50612; . unzip Trimmomatic-0.39.zip cd Trimmomatic-0.39/ ./trimmomatic-0.39.jar # 결과 확인 pwd # path 복사 sudo vi ~/.bashrc export Trimmomatic=/home/dohk/GoogleDrive/workspace_BIO/NGS_installation/Trimmomatic-0.39/trimmomatic-0.39.jar export PATH=(달러표시)PATH:/home/dohk/GoogleDrive/workspace_BIO/NGS_installation/Trimmomatic-0.39:(달러표시)PATH source ~/.bashrc java -jar (달러표시)Trimmomatic cd .. rm Trimmomatic-0.39.zip . &#44208;&#44284; &#54868;&#47732; . fastQC . &#49444;&#52824; &#47749;&#47161;&#50612; . sudo apt update sudo apt install fastqc . &#50640;&#47084; &#45432;&#53944; . python&#51012; &#52286;&#51012; &#49688; &#50630;&#45796;&#45716; &#50640;&#47084;&#44032; &#46896; &#46412; . 우분투에서 작업 시, python은 기본적으로 설치된다. 터미널에서 python 명령어를 쳤을 때 python이 실행되지 않는다면, 다음과 같이 해결한다. 먼저, cd /usr/bin을 실행한 후, p까지 입력한 후, TAB키를 계속 누르면 python 관련된 파일 목록이 뜬다. 이곳에 python이 없다면, python3.x 등 다른 python이 있을 것이다. 이를 python만 쳐도 실행되도록 다음과 같이 명령창에 입력한다. 여기서는 python3.8버전이 있다고 가정한다. . ln -s /usr/bin/python3.8 /usr/bin/python . 다시 python을 입력하여 제대로 실행되는지 확인한다. . Reference . https://gatk.broadinstitute.org/hc/en-us/articles/360041320571--How-to-Install-all-software-packages-required-to-follow-the-GATK-Best-Practices | https://oooooohi.tistory.com/entry/Linux-not-in-gzip-format-%EC%97%90%EB%9F%AC-tar | https://anow.tistory.com/110 | https://ubuntuforums.org/showthread.php?t=1921721 | https://stackoverflow.com/questions/11471690/curl-h-no-such-file-or-directory/11471743 | https://stackoverflow.com/questions/22738077/backports-lzma-lzmamodule-c11518-fatal-error-lzma-h-no-such-file-or-direct | http://www.usadellab.org/cms/?page=trimmomatic | https://www.howtoinstall.me/ubuntu/18-04/fastqc/ | .",
            "url": "https://tfedohk.github.io/dohk/ngs-sw-installation/",
            "relUrl": "/ngs-sw-installation/",
            "date": " • Sep 22, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "단백질의 발현과 정제",
            "content": "이전 실험 노트에서는 gene cloning을 수행하여 E.coli/DH5α(이하 DH5a)에 도입되었던 프라스미드 vector를 E.coli/BL21(DE3)(이하 BL21)에 재도입하는 과정을 다루었었다. 이렇게 transformation된 균주를 배양하여, 단백질의 발현, 정제, 마지막으로 정량하는 방법에 대해 알아보자. . &#45800;&#48177;&#51656; &#48156;&#54788; . BL21&#51060; &#50416;&#51060;&#45716; &#51060;&#50976; . DH5a는 단백질 발현을 유도할 수 있는 시스템이 존재하지 않는다. 반면, BL21은 단백질 발현을 유도시킬 수 있는 시스템이 존재한다. 유전자는 mRNA로 전사(transcript)되며, mRNA는 Amino Acid를 만드는데 관여한다. 유전자에서 mRNA로 전사될 때 RNA Polymerase가 결합하는 부위인 promoter가 있는데, BL21은 T7 RNA Polymerase가 붙을 수 있으므로, DNA→RNA로의 전환이 이루어진다. 또한, mRNA→단백질이 되기 위해서는 RBS(Ribosome Binding Site)가 존재해야 하는데, BL21은 RBS가 존재하므로 단백질을 만들어낼 수 있는 시스템을 갖추고 있다고 볼 수 있다. RBS가 존재하면, 가장 먼저 나타나는 ATG 서열에서부터 아미노산을 붙여나가기 시작하여 최종적으로 단백질이 만들어진다. 또한 BL21은 DH5a보다 더 빠른 growth rate을 가진다. . &#45800;&#48177;&#51656; &#51221;&#51228; . 단백질 정제란 복합 혼합물 (complex mixture)로부터 단일 타입의 단백질을 분리하는 일련의 과정들이다. 단백질 정제는 관심 있는 단백질의 기능, 구조 그리고 상호작용을 분석하기 위해서 필수적이다. . 단백질 정제와 단백질 분리는 동일한 표현이다. 우리는 단백질 정제의 방법으로 Affinity chromatography를 사용하며, 그 다음으로 FPLC를 다룬다. . Affinity Chromatography . Affinity chromatography는 단백질과 특정 물질(ligand)과의 친화성(affinity)을 이용한 대표적인 흡착 chromatography다. 무엇에 대한 친화성일까? 금속 이온 중 니켈에 대한 친화성이다. 따라서, 단백질 자체에 금속에 친화성을 갖는 성질이 있다면 단백질을 정제할 수 있게 된다. 히스티딘 잔기(His-tag)가 바로 그 역할을 하는데, His은 금속(Ni, Mn, Mg, Co, Fe 등)과 특이적 결합을 이룬다. 특이적 결합의 다른 예는 항체와 항원, cytokine 및 hormone과 receptor, 효소와 기질 및 inhibitor 등이 있다. His을 붙이기 위해서는 target gene을 vector에 끼워넣는 단계에서부터 고려해야 한다. target gene의 앞 부분에 His을 붙인 후, 원하는 vector에 이를 끼워넣은 후, 배양하여 단백질을 발현시키면 His 부위부터 단백질이 생성되기 때문에 금속에 친화성을 갖는 단백질이 된다. 단백질을 분리해 낸 후엔 washing 과정을 거치는데 이 과정에서는 Imidazole이 쓰인다. Imidazole은 His과 구조적으로 유사하다. 때문에 이미다졸은 His과 경쟁하여 His이 금속으로부터 떨어져나가게 유도한다. 결론적으로 원하는 단백질만 남는다. 금속으로는 니켈이 가장 많이 쓰인다. 이러한 방법을 Affinity Chromatography라고 한다. . . 이 실험 노트에서 사용된 레진은 Thermo scientific사의 레진이며, 니켈로 인해 푸른색을 띄는 것을 볼 수 있다. 이 니켈 이온을 함유하는 구슬이 His-tag과 결합하여 단백질을 붙잡아 놓으면, 단백질 이외의 다른 물질들이나 다른 단백질을 걸러낼 수 있게 된다. . . 단백질만 남게 되면, His을 대체할 수 있는 이미다졸(Imidazole)을 이용하여 다시 단백질을 뽑아낼 수 있다. . &#51060;&#48120;&#45796;&#51320;(Imidazole) . 이미다졸은 물에 용해되어 약 알칼리성을 띄는 흰색 또는 무색의 고체이다. 인접하지 않은 질소 원자를 갖는 방향족 헤테로고리 화합물이다. . . Affinity chromatography는 다른 chromatography에 비해 정제효율과 회수율이 높으며, 한 번에 많은 시료를 처리할 수 있다는 장점이 있다. 따라서, 단백질의 정제에 있어서 우선 affinity chromatography를 사용하는 것을 고려한다. . &#51060;&#50808;&#51032; chromatography . 단백질은 분자량, 전하(등전점), 소수성, 생리활성(화학적 반응성) 등이 서로 제각각이다. fig. Gel filteration chromatography의 개략도 . Cell Lysis . 특정 미생물은 세포 밖으로 단백질을 배출한다. 이럴 경우에는 단백질이 세포 밖에 있으므로 세포만 제거하면 된다. 그러나 BL21은 세포 내에서 단백질이 생성되므로 세포를 파쇄하여 단백질을 얻어야 한다. 이를 Cell Lysis(또는 Lysis)라 한다. 아래의 위키피디아의 영어 정의가 조금 더 명확하여 인용한다. . Lysis is the breaking down of the membrane of a cell, often by viral, enzymic, or osmotic(삼투) mechanisms that compromise its integrity(온전한 상태). . 위 표현을 빌리자면 셀의 membrane을 제거하여 온전한 상태를 깨는 것이다. 파쇄 된 세포는 원심분리를 거치게 되는데, 원심분리의 결과는 불용성 물질과 가용성 물질로 분류할 수 있다. . &#48520;&#50857;&#49457; &#47932;&#51656;(insoluble particles) . 불용성 물질은 침전물을 말한다. . &#44032;&#50857;&#49457; &#47932;&#51656;(soluble particles) . 가용성 물질은 상등액을 말한다. 주로 세포막 내의 세포질들이 이에 해당한다. . Cell Lysis&#47484; &#54616;&#45716; &#49464; &#44032;&#51648; &#48169;&#48277; . 초음파(ultrasonic) 현탁액에 초음파를 주사하는 방식이다. | . | 고압 세포보다 작은 구멍을 뚫은 후, 압력을 가하여 세포가 쪼개지지 않고서는 구멍을 통과할 수 없게 만든 방법이다. | . | 효소 및 화학물질 화학물질로는 urea(요소), guanidine HCl 등이 쓰이며, 효소로는 리소자임(lysozyme) 등이 쓰인다. 리소자임(lysozyme) 동물에 의해 생성되는 항균성 효소이다. 몸속으로 침투한 세균의 용해를 일으켜서 세균세포벽의 온전성을 위태롭게 만든다. 리소자임은 눈물, 침, 모유, 점액을 포함한 분비물에 풍부하다. 또, 대식세포와 호중성 과립구(PMN)의 세포질 과립부에도 존재한다. 상당한 양의 리소자임은 달걀의 흰자에서 볼 수 있다. | . | . | . | . 세포벽을 파괴하면 세포막이 나온다. 세포막은 지질 이중층으로 이루어져 있다. 따라서 세포막은 세포막 외부의 농도를 높이는 식의 삼투압 차이를 이용하여 손쉽게 깰 수 있다. 이를 &quot;cleared lysate(용해물)&quot;라 한다. . open column방법과 FPLC 방법 . &#45800;&#48177;&#51656; &#51221;&#47049; . 단백질 정량은 발현된 단백질의 양을 계산하는 것을 말한다. 발현된 단백질의 양을 계산하기 위해서는 단백질의 농도를 구해야한다. 이를 위해서는 target gene에 의해 생성되는 아미노산 조성을 통해 시스테인(Cysteine)의 개수와 이에 따른 흡광도를 알아야 한다. . EcoCyc: target gene&#51032; sequence&#47484; &#50508;&#50500;&#45240;&#45796;. . EcoCyc 사이트에서 target gene의 서열을 알아낼 수 있다. . target gene은 현재 rihB이다. . . rihB를 입력한 후 Gene Search를 클릭한다. . . Get Nucleotide Sequence를 클릭한다. . . atg로 시작하여 taa/tag/tga로 끝나는 부분까지가 target gene이며, 이를 복사한다. . atgGAAAAGA GAAAAATTAT TCTGGATTGT GATCCGGGTC ATGATGATGC TATTGCTATA ATGATGGCGG CGAAACATCC GGCAATAGAT TTATTAGGCA TCACTATTGT AGCGGGTAAT CAGACGCTTG ATAAAACATT AATTAATGGC CTGAATGTTT GCCAGAAACT GGAGATTAAT GTTCCGGTTT ATGCGGGGAT GCCGCAGCCC ATTATGCGTC AACAAATCGT TGCCGATAAT ATTCACGGTG AAACCGGACT GGATGGCCCG GTATTCGAGC CGCTGACCCG CCAGGCAGAA AGCACTCATG CGGTGAAATA TATCATTGAT ACCCTGATGG CAAGCGATGG CGATATCACT CTGGTGCCGG TTGGTCCGCT TTCAAATATC GCGGTGGCAA TGCGTATGCA ACCCGCGATC CTGCCCAAAA TCCGTGAAAT TGTGCTAATG GGCGGCGCTT ACGGTACAGG CAACTTCACG CCATCTGCCG AGTTCAACAT CTTTGCCGAC CCGGAAGCCG CACGCGTAGT GTTCACCTCC GGCGTTCCAT TAGTGATGAT GGGCCTCGAT CTCACCAACC AGACCGTTTG CACCCCGGAC GTGATTGCTC GGATGGAAAG GGCAGGCGGC CCCGCCGGAG AGCTGTTCAG CGACATCATG AACTTCACTC TCAAAACGCA GTTCGAAAAC TACGGCCTTG CTGGCGGCCC GGTGCACGAC GCCACCTGCA TCGGTTATCT GATTAACCCT GATGGCATTA AAACCCAGGA GATGTACGTC GAAGTGGACG TCAACAGTGG CCCTTGCTAT GGGCGTACCG TCTGCGACGA GCTGGGCGTT CTTGGCAAGC CCGCCAATAC CAAAGTCGGC ATCACTATTG ATACAGACTG GTTCTGGGGA TTAGTCGAAG AGTGCGTGCG CGGCTACATC AAAACCCATt aa . ExPASy: &#45800;&#48177;&#51656;&#50640; &#45824;&#54620; &#51221;&#48372;&#47484; &#50619;&#45716;&#45796;. . ExPASy 사이트에 접속한 후, . proteomics에 들어가서 translate을 클릭한다. . . 복사한 서열을 붙여넣는다. . . pET28 vector를 제한효소로 절단하여 target gene을 끼워넣는 것이기 때문에, pET28 vector의 제한효소 NcoI~NheI까지의 서열을 target gene의 앞에 붙여넣는다. . NcoI~NheI까지의 서열은 다음과 같다. . ATGGGCAGCAGCCATCATCATCATCATCACAGCAGCGGCCTGGTGCCGCGCGGCAGCCATATGGCTAGC . NcoI~NheI까지의 서열을 target gene앞에 붙인 최종 서열은 다음과 같다. . ATGGGCAGCAGCCATCATCATCATCATCACAGCAGCGGCCTGGTGCCGCGCGGCAGCCATATGGCTAGC atgGAAAAGA GAAAAATTAT TCTGGATTGT GATCCGGGTC ATGATGATGC TATTGCTATA ATGATGGCGG CGAAACATCC GGCAATAGAT TTATTAGGCA TCACTATTGT AGCGGGTAAT CAGACGCTTG ATAAAACATT AATTAATGGC CTGAATGTTT GCCAGAAACT GGAGATTAAT GTTCCGGTTT ATGCGGGGAT GCCGCAGCCC ATTATGCGTC AACAAATCGT TGCCGATAAT ATTCACGGTG AAACCGGACT GGATGGCCCG GTATTCGAGC CGCTGACCCG CCAGGCAGAA AGCACTCATG CGGTGAAATA TATCATTGAT ACCCTGATGG CAAGCGATGG CGATATCACT CTGGTGCCGG TTGGTCCGCT TTCAAATATC GCGGTGGCAA TGCGTATGCA ACCCGCGATC CTGCCCAAAA TCCGTGAAAT TGTGCTAATG GGCGGCGCTT ACGGTACAGG CAACTTCACG CCATCTGCCG AGTTCAACAT CTTTGCCGAC CCGGAAGCCG CACGCGTAGT GTTCACCTCC GGCGTTCCAT TAGTGATGAT GGGCCTCGAT CTCACCAACC AGACCGTTTG CACCCCGGAC GTGATTGCTC GGATGGAAAG GGCAGGCGGC CCCGCCGGAG AGCTGTTCAG CGACATCATG AACTTCACTC TCAAAACGCA GTTCGAAAAC TACGGCCTTG CTGGCGGCCC GGTGCACGAC GCCACCTGCA TCGGTTATCT GATTAACCCT GATGGCATTA AAACCCAGGA GATGTACGTC GAAGTGGACG TCAACAGTGG CCCTTGCTAT GGGCGTACCG TCTGCGACGA GCTGGGCGTT CTTGGCAAGC CCGCCAATAC CAAAGTCGGC ATCACTATTG ATACAGACTG GTTCTGGGGA TTAGTCGAAG AGTGCGTGCG CGGCTACATC AAAACCCATt aa . 이 서열대로 아미노산이 생성되며, 단백질이 생성된다. . . translate을 누른다. . . 결과물의 M을 누른다. . . Sequence analysis tools에서 ProtParam을 클릭한다. 별도의 창이 뜰 것이다. . . &#45800;&#48177;&#51656;&#51032; &#50577; &#44396;&#54616;&#44592; . 단백질 정제 후의 흡광도를 구한 후, 이 값을 0.643으로 나누면 단백질의 농도가 나온다. 농도X부피 = 단백질의 양이므로, 이를 통해 단백질의 양을 계산할 수 있다. . &#49892;&#54744; &#44284;&#51221; &#48143; &#44208;&#44284; . &#44512;&#51452; &#48176;&#50577; . &#50529;&#52404; &#44512;&#51452; &#48176;&#50577; . LB-Broth 100mL + Kanamycin 100μl → LB+Kan 항생제 접종은 전체 부피의 0.1%. 단위만 낮추면 된다. | . | LB+Kan 8mL → cap tube | BL21 glycerol stock 100μl → LB+Kan cap tube 8mL: 접종 균주 접종은 전체 부피의 1%., 따라서 80μl를 접종하는 것이 정석. 더 많은 용량을 넣은 이유는 glycerol과 BL21이 1:1 비율로 섞여 있다는 점을 고려하였기 때문 | . | incubator → 37°C → overnight | overnight → LB+Kan 8mL 중 5mL → LB+Kan 100mL → shaking incubator → 37°C, 2hr → 단백질 발현 유도 단계와 pre SDS-PAGE 단계로 이동 | . &#44256;&#52404; &#44512;&#51452; &#48176;&#50577; . 고체 배지에서 배양된 균주: 단백질 정제와 RT-PCR 에서 사용할 예정 . NaCl 5g/1L, Yeast Extract 5g/1L, Trypton 10g/1L, Agar 6g/1L | clean bench → pour → 식히기 → incubator → overnight | BL21 glycerol stock, DH5a glycerol stock → streaking | . . rihB+DH5a/pET28 균주에 대한 streaking을 다소 서툴게 한 것 같다. 액체 균주 상태일 때 pipetting을 충분히 수행한 후 inoculation loop에 충분히 적신 후에 streaking을 해야겠다. . &#49884;&#50557;, &#48260;&#54140; &#51228;&#51312; . Equilibrium Buffer(Suspension Buffer) . 5M NaCl 50mL + D.W. 440mL | 20mM Tris-HCl(pH 8.0) 10mL | . Washing Buffer . 5M NaCl 25mL + D.@. 215mL | 20mM Imidazole 5mL | 20mM Tris-HCl(pH 8.0) 5mL | . Elution Buffer . 5M NaCl 25mL + D.W. 170mL | 20mM Imidazole 50mL | 20mM Tris-HCl(pH 8.0) 5mL | . . &#44536; &#50808; &#49884;&#50557; &#51228;&#51312; . BPB: Bromophenol blue . &#45800;&#48177;&#51656; &#48156;&#54788; &#50976;&#46020; . 2hr 배양된 액체 균주 100mL + IPTG 1mM/mL → 1mL → EP tube: zero time: 단백질 발현 유도 시작 IPTG: 1M/1mL. 접종해야 할 농도는 1mM/1μl, culture된 LB+Kan은 100mL. → IPTG 100μl 접종 | IPTG를 넣은 후 3시간~5시간이 지나면 saturation된다. | . | shaking incubator → 37°C, every 1hr: 시간대 별 단백질 발현 확인 단계로 이동 | . &#49884;&#44036;&#45824; &#48324; &#45800;&#48177;&#51656; &#48156;&#54788; &#54869;&#51064; . 매 시간, 1mL 샘플링 → 4°C: 보관 필요한 샘플: zero time, 1hr, 2hr, 3hr, 4hr, 5hr | . | spectrophotometer X: 샘플의 OD값(흡광도)이 이상적이라 가정함 | sample 6개 → centrifuge → 12000rpm, 5min → 상등액 discard: LB-Kan 배지 제거가 목적 | D.W. 100μl → 각 sample 6개 → vortexing | 각 sample 6개 + 2X SDS-PAGE buffer 100μl → pipetting | Heat-block → 95°C, 10min | centrifuge → 12000rpm, 1min | . pre SDS-PAGE . 2hr 배양된 액체 균주 100mL 중 시간대 별 단백질 발현에 사용된 후의 남은 액체 균주 → 50mL conical tube → centrifuge → 3500rpm, 20min → 상등액 discard → loop: cell down | pellet → -4°C: 보관: Harvest | suspension buffer(equilibrium buffer) 25mL → pellet → pipetting pellet : buffer = 1 : 20으로 맞추어야 하지만, 해당 실험에서는 25mL의 buffer를 넣는다. | . | 초음파(ultrasonic) 파쇄, 10min | . . centrifuge → 20000rpm, 30min | . . 상등액(clear lysate) 회수 → 4°C: 보관 | . Analysis of SDS-PAGE: &#45800;&#48177;&#51656; &#48156;&#54788; &#54869;&#51064; . running gel &#51228;&#51089; . 0.75M Tris(pH 8.8) 3.75mL | 30% Acryl-bis 3mL | 10% SDS 75μl | D.W. 0.65mL | 25% APS 25μl | TEMED 6μl → 굳으므로 슬릿에 분주하기 직전에 넣을 것 | . stacking gel &#51228;&#51089; . 0.25M Tris(pH 6.8) 1.45mL | 30% Acryl-bis 0.375mL | 10% SDS 37.5μl | D.W. 1.45mL | 25% APS 15μl | TEMED 5μl → 굳으므로 슬릿에 분주하기 직전에 넣을 것 | . [→티슈에 물을 묻힌 후 랩으로 감싸 보관하여 gel의 건조 방지] . Sample 6개 → centrifuge → 13000rpm, 5min → 상등액 discard | EP tube(pellet) + 멸균수 100μl → pipetting | 2X SDS PAGE sample buffer 100μl → EP tube → pipetting | Loading Buffer 들어간 남은 시료 → -4°C: 보관 | Heat-block → 95°C, 10min | centrifuge → 12000rpm, 1min [→ -20°C: 보관] | 다음의 조건으로 loading size marker는 뚜껑에 pre-stained, tube면에 PM001 0.5mL EZ(TM) Prestained Protein Ladder Marker라고 쓰여진 마커를 사용 | . | . . . SDS-PAGE gel running 조건: 100V, 약 1 시간 | . . . gel → destaining solution → 5min waiting → discard → staining solution 1hr waiting → destaining 10min → destaining 10min → ...:염색약 빼는 과정 | . &#44208;&#44284; &#54644;&#49437; . Fig. Analysis of SDS-PAGE. size marker: protein size marker; zero time: Un-induced with IPTG; 1hr, 2hr, 3hr, 4hr, and 5hr: induced with IPTG. . gene cloning된 BL21(rihB+pET28)이 IPTG에 의해 발현한 단백질의 분자량은 33,748Da이다. 또한 미생물은 본인이 살아가는데에 필요한 단백질을 스스로 생산한다. 이 단백질의 분자량이 2,470.69Da이다. 두 분자량의 합 36,218.69Da이 SDS 아크릴아마이드 겔에서 올바르게 보여지고 있다. . &#45800;&#48177;&#51656; &#51221;&#51228; . 정제에서 washing은 매우 중요한 과정이다. 처음엔 이미다졸(Imidazole)이 없는 버퍼인 Equilibrium buffer (또는 Suspension Buffer)로 washing을 수행한다. 그 다음엔 Imidazole을 서서히 높이면서 단백질이 안 나올 때 까지 washing을 수행한다. 정제 후에는 SDS-PAGE를 다시 수행하여 해당 사이즈 마커 부근에서 단백질이 뜨는지 재차 확인하는 과정을 거친다. (다른 단백질들은 뜨면 안 된다.) . 배양액 50μl → Ep tube 1: 정제 전 | Equilibrium(Suspension) Buffer 충분한 양 → open column → discard: 세척 | 배양액 10μl → open column → 50ml conical tube 1 | Suspension buffer 5ml → open column → conical tube 1 → 50μl → EP tube 2: 정제 후 | Washing buffer 10ml → open column → 50ml conical tube 2 | Washing buffer 5ml → open column → 50ml conical tube 2 → 50μl → EP tube 3: washing | Elution buffer 3ml → open column → 50ml conical tube 3 → 50μl → EP tube 4: Elution 1 | Elution buffer 3ml → open column → 50ml conical tube 4 → 50μl → EP tube 5: Elution 2 | Elution buffer 3ml → open column → 50ml conical tube 5 → 50μl → EP tube 6: Elution 3 | Elution buffer 3ml → open column → 50ml conical tube 6 → 50μl → EP tube 7: Elution 4 | Elution 6ml → open column → discard | Suspension buffer 30ml → open column → discard | Suspension buffer 6ml → open column: 보관 | EP tube(Elution 1, Elution 2, Elution 3, Elution 4) 냉장 보관: FPLC에서 사용할 예정 | . Analysis of SDS-PAGE: &#45800;&#48177;&#51656; &#51221;&#51228; &#54869;&#51064; . running gel &#51228;&#51089; . 0.75M Tris(pH 8.8) 3.75mL | 30% Acryl-bis 3mL | 10% SDS 75μl | D.W. 0.65mL | 25% APS 25μl | TEMED 6μl → 굳으므로 슬릿에 분주하기 직전에 넣을 것 | . stacking gel &#51228;&#51089; . 0.25M Tris(pH 6.8) 1.45mL | 30% Acryl-bis 0.375mL | 10% SDS 37.5μl | D.W. 1.45mL | 25% APS 15μl | TEMED 5μl → 굳으므로 슬릿에 분주하기 직전에 넣을 것 | . [→티슈에 물을 묻힌 후 랩으로 감싸 보관하여 gel의 건조 방지] . Sample 6개 → centrifuge → 13000rpm, 5min → 상등액 discard | EP tube(pellet) + 멸균수 100μl → pipetting | 2X SDS PAGE sample buffer 100μl → EP tube → pipetting | Loading Buffer 들어간 남은 시료 → -4°C: 보관 | Heat-block → 95°C, 10min | centrifuge → 12000rpm, 1min [→ -20°C: 보관] | 다음의 조건으로 loading | . . SDS-PAGE gel running 조건: 100V, 약 1 시간 | gel → destaining solution → 5min waiting → discard → staining solution 1hr waiting → destaining 10min → destaining 10min → ...:염색약 빼는 과정 | . &#44208;&#44284; &#54644;&#49437; . Fig. Analysis of SDS-PAGE. size marker: protein size marker; BP: Before Purification; AP: After Purification; W: after washing solution; Elu1, Elu2, Elu3, Elu4: after Elution buffer. . 정제하지 않은 상태에서 보였던 여러 발현 단백질들이 정제하는 과정을 거친 후엔 보이지 않으며, 35kDa 부근에서 원하는 단백질이 남아있는 것을 확인할 수 있다. 이는 rihB+pET28에 의해 발현된 단백질에 His-tag이 붙어 있었던 덕분으로, 레진에 의해 다른 불순물들이 빠져나갈 때 빠져나가지 않고 이미다졸에 의해 분리되어 빠져 나왔기 때문이다. 분자량은 36,218.59Da이므로, 단백질이 올바르게 정제되었음을 알 수 있다. . 겔이 오른쪽 위로 휘어진 이유로 사진 상에 보여지는 밴드들이 오른쪽 위로 점점 올라가는 것처럼 보이지만, 모두 같은 선상에 있는 밴드들이다. . FPLC . BL21(gene cloning) colony → LB+kan 10ml → shaking Incubator → overnight(about 16hr) → BL21 액체 배지(오버나잇) 3mL → LB-kan 300mL → shaking incubator → 2hr waiting | IPTG 300uL(100mL당 100μL) + LB-kan 300mL → shaking incubator → 5hr waiting → centrifuge 3500rpm, 20min → 상등액 discard → 빈 conical tube로 balance 영점 잡기 → pellet 무게 측량(여러 conical tube를 이용했을 경우, 총 무게를 합산) 결과: 2.97g 1:20의 비율로 Equilibrium Buffer를 넣어야 하므로, 필요한 Equilibrium Buffer의 용량은 59.48mL(60mL). | . Reference . https://en.wikipedia.org/wiki/Lysis | https://ko.wikipedia.org/wiki/리소자임 | https://www.bio-rad.com/ko-kr/applications-technologies/introduction-affinity-chromatography?ID=MWHAVG4VY | https://www.thermofisher.com/kr/ko/home/life-science/protein-biology/protein-biology-learning-center/protein-biology-resource-library/pierce-protein-methods/overview-affinity-purification.html | https://www.nanoprobes.com/products/Ni-NTA-Nanogold-His-tag-labeling-and-detection.html | .",
            "url": "https://tfedohk.github.io/dohk/expression-and-purification-of-protein/",
            "relUrl": "/expression-and-purification-of-protein/",
            "date": " • Sep 16, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "액체와 고체의 밀도 측정 및 정밀도(precision), 정확도(accuracy) 구하기",
            "content": "어떤 물질의 물리적 성질은 위키피디아에 의하면 다음과 같다. . 물리적 성질 위치, 전기장, 끓는점, 녹는점, 팽창, 이동, 질량, 압력, 색, 밀도, 부피, 길이, 강도, 온도, 비중, 열전도율, 비열, 선팽창계수, 자성, 전기전도율, 열전도율 | . | . 이 노트에 기술되는 실험은 어떤 용매의 물리적 성질 중 밀도를 측정하고 이에 대한 정확도와 정밀도를 구하는 것이 목적이다. . &#49892;&#54744;1: &#48128;&#46020; &#52769;&#51221; . 어떤 물질의 정체를 모를 땐 밀도를 재면 알 수 있다. 아르키메데스의 원리(부력의 원리)와 같다. . 부력의 원리 물체의 부분(혹은 전체)이 유체에 잠기면 그 물체가 차지하는 부피에 상응하는 물의 무게 만큼의 힘이 물체에 가해진다는 원리 | 각 물질들은 고유한 밀도를 가지고 있다. | 어떤 두 물질의 부피가 같다면, 위 수식에 의해 밀도가 클수록 질량이 크다. | 순금처럼 일반적으로 사각형인 물질은 측정이 용이하지만 금관같은 모양이 복잡한 물질은 부피 측정이 어렵다. 하지만 같은 질량일지라도, 다른 물질이라면 밀도가 다르므로 부피가 다를 것이고 같은 물질이면 부피가 같아야 한다. | . | . 사용할 용매는 아이소프로판올(isopropyl alcohol), 다이메틸 설폭사이드(Dimethyl sulfoxide;DMSO), 에탄올(EtOH)이다. . 주어진 용매의 밀도를 측정하기 위해 10mL 파이펫을 이용해 용매를 aspiration한 후, 밸런스와 50mL 비이커를 이용하여 무게를 잴 것이다. . TD와 TC개념 TC는 to contain을, TD는 to deliver를 의미한다. TC가 표시된 파이펫(또는 용기)의 경우, 파이펫(또는 용기)에 담기는 액체의 양이 파이펫에 표시된 눈금과 정학히 일치한다는 것을 의미한다. 반면 TD로 표시된 파이펫(또는 용기)의 경우, 옮기려는 액체의 양이 파이펫에 표시된 눈금과 일치함을 의미한다. 이는 TC에 쓰이는 재질과 TD에 쓰이는 재질의 차이이며, TD로 표시된 파이펫을 이용하여 액체를 옮기고자 할 땐 방울 몇 개가 큰 영향을 주지 않음을 의미한다. | . | . &#49892;&#54744; &#44284;&#51221; . 50mL 비이커의 무게를 0점으로 설정한다. | 10mL 파이펫을 이용하여 용매 10mL를 뽑는다. | 50mL 비이커에 이를 넣고 무게를 측정하고 기록한다. | 하나의 미지시료에 대하여 4번을 반복하고 평균을 구하여 이론밀도와 비교한다. | . &#49892;&#54744; &#44208;&#44284; . 분산(std)은 엑셀의 STDEV.P 함수를 이용하였다. 엑셀에는 분산을 구하는 세 개의 함수(stdev.p, stdev.s, stdev)가 있다. 이 중, stdev는 사용이 지양되며, stdev.p는 제시한 자료가 샘플의 전부일 때, 제시한 자료가 전체의 일부일 경우에는 stedev.s를 사용한다. | . | 측정은 10mL 파이펫을 이용했으나, 밀도값을 구하기 위해서는 단위 보정이 필요하다. 따라서 측정값과 함께 밀도값을 기록하였다. | . &#49892;&#54744; &#44208;&#44284; &#54644;&#49437; . 실험1의 결과에 대한 해석은 실험2를 진행해야 의미가 있지만, 눈대중으로 보아도 평균값과 이론밀도가 유사한 것을 확인할 수 있다. . &#49892;&#54744;2: &#48516;&#49437;&#53685;&#44228;&#44050; &#49328;&#52636; . 실험1에서 구한 밀도값을 통해 정밀도(precision)과 정확도(accuracy)를 구할 수 있다. . &#51221;&#48128;&#46020;(precision) . 정밀도는 반복시험을 통해 얻은 결과를 상대표준편차(Relative Standard Deviation; RSD)로 나타내는 것을 말한다. 측정한 횟수 n에 대한 평균값에 대한 표준편차의 비율로 정의된다. 위 수식에 따르면 편차가 작을수록 정밀도가 낮아지는 것을 확인할 수 있으며, 정밀도는 낮은 값을 가질수록 좋다고 할 수 있다. . &#51221;&#54869;&#46020;(accuracy) . 정확도는 시험분석 결과가 얼마나 참값에 근접하는지를 나타낸다. 동일한 매질의 인증시료를 확보할 수 있는 경우, 표준절차서(Standard Operational Procedure; SOP)에 따라 인증표준물질을 분석한 결과값(Cm)과 인증값(Cc)과의 상대적 백분율로 구할 수 있다. 즉, 참값(Cc)에 대한 반복시험을 통해 얻은 측정값의 평균값(Cm)의 비율로 정의된다. 정확도는 그 값이 높을수록 좋다. . 정리하자면, 정밀도는 평균으로 표준편차를 나눈 비율을, 정확도는 이론밀도로 평균을 나눈 비율을 의미한다. . &#49892;&#54744; &#44208;&#44284; . 실험자의 편향에 의한 오차 발생 정밀도와 정확도는 사람마다 파이펫의 눈금보다 위, 또는 아래로 측량하는 기준이 다르기 때문에 그 값이 달라질 수 있다. 즉, 실험하는 사람에게 편향된 결과가 나올 수 있다. | . | 기계적인 편중에 의한 오차 발생 . 파이펫이나 저울이 교정되어 있지 않다면 실험자가 정확히 측량했어도 정확한 값이 아닐 수도 있다. | . | 파일: https://drive.google.com/file/d/1rAUFbQ-FKUEno8itYewEiL1rPG8NTxTy/view?usp=sharing . | . &#49892;&#54744; &#44208;&#44284; &#54644;&#49437; . 정밀도가 모두 1% 미만으로 나왔다. 이는 정밀하게 측정되었음을 의미한다. . 정확도는 다소 아쉬운데, 95% 미만으로 떨어지지는 않았다. 실험자의 편향에 의한 오차 또는 기계적인 편중에 의한 오차 둘 중 기계적인 편중에 의한 오차라고 추정되어 진다. 실험을 할 당시, 클래스의 많은 사람들이 돌아가면서 실험을 했는데 저울의 밸런스가 그 사이에 달라졌을 가능성이 있다. 실험자의 편향에 의한 오차의 가능성도 존재하는데, 각 사람이 용매를 하나씩 맡아서 측량했기 때문에 제각각의 결과가 나올 수 있다고 보여진다. . Reference . https://ko.wikipedia.org/wiki/물리적_성질 | https://blog.naver.com/miseos/220911830468 | https://www.westlab.com.au/blog/2017/07/19/what-is-the-difference-between-td-and-tc-pipettes | .",
            "url": "https://tfedohk.github.io/dohk/Chemistry-experiment_note-measurement_of_density_precision_acc/",
            "relUrl": "/Chemistry-experiment_note-measurement_of_density_precision_acc/",
            "date": " • Sep 15, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "흡광도(absorbance)",
            "content": "분석을 위해서는 분석의 대상이 되는 물질이 흡광이 되어야 한다. 같은 Fe라고 해도 무엇과 결합했는가에 따라 흡광도가 다르다. . &#44160;&#47049;&#48277; . 검량법이란, 어떤 미지물질의 농도를 측정할 때 비례성을 이용해 미지농도를 산출하는 것을 말한다. 대표적으로 검량성 작성법(Calibration curve method), 표준물 첨가법(Standard addition method), 내부표준법(Internal standard method)이 있다. . &#44160;&#47049;&#49440; &#51089;&#49457;&#48277;(Calibration curve method) . 일반적으로 가장 많이 사용되는 방법이다. 표준용액을 만들어 흡광도를 측정하여 검정곡선을 만든 후, 미지시료의 흡광도를 측량하여 3~5개의 농도값을 통해 역으로 미지시료의 농도를 산출하는 방법이다. 검량선을 만들기 위해서는 최소 세 개의 농도의 표준용액 스펙트럼을 측정해야 한다. 이상적인 상황은 측정된 모든 표준값이 일직선 위에 놓이는 것이지만, 실제로는 다소 분산된 경향을 보인다. . 검량선을 결정할 때 보통 최소자승법 등의 통계적 방법을 적용한다. 이때 R^2 상관계수값을 구하게 되는데, 이 값이 1에 근접해야 한다. 적어도 0.99이상은 나와야 한다. . &#54364;&#51456;&#47932; &#52392;&#44032;&#48277;(Standard addition method) . 미지시료에 미지시료 이외의 물질이 섞여있을 경우, 이미 알고 있는 표준 분석물질을 미지시료에 넣어 분석 후, 미지시료 중의 분석물질의 양을 알아내는 방법이다. 대부분의 시료가 화학적, 물리적으로 방해되는 성분들을 함께 포함하고 있다. 표준물 첨가법은 이에 대한 대안이다. . &#45236;&#48512;&#54364;&#51456;&#48277;(Internal standard method) . 실험에 따라 많은 시료를 한 번에 돌릴 때, 시약의 성질(pH 등)이 변할 수 있다. 시간에 따라 달라질 수 있는 이러한 경우에 내부표준법을 사용한다. . &#55137;&#44305;&#46020;&#50640; &#50689;&#54693;&#51012; &#48120;&#52824;&#45716; &#50836;&#49548; . &#50857;&#47588; . 흡광도를 알아내기 위해서는 UV visible 기계를 사용한다. 대표적으로 spectrophotometer가 있다. 위의 예시는 같은 아세톤이라 하더라도 물과 섞였을 때의 아세톤과 hexane과 섞였을 때의 아세톤의 흡광도가 다름을 보여준다. 기본적으로 카본 구조는 발색이 가능하며, 아세톤은 구조적으로 자외선 영역(10에서 400나노미터의 파장 영역)에서 강하게 흡광을 하는 성질을 가진다. . | 아세톤은 비공유전자쌍을 가졌다. 따라서 아세톤은 물분자와 수소결합을 할 수 있다. 아세톤이 물과 섞였을 때의 흡광도와 hexane과 섞였을 때의 흡광도가 다른 이유는 주변 이웃 용매들의 결합 참여 유무에 따라, 패턴이 달라지기 때문이다. 물과 섞이는 경우엔 수소결합으로 인해 파장이 변하는 경우다. . | 어떤 물질을 분석한다고 할 때, λmax(제일 높은 파장)를 보면 그게 어떤 물질인지를 살펴볼 수 있는데, 이때 같은 물질이라 하더라도 어떤 물질과 섞였는지에 따라 파장이 달라진다. 따라서 UV visible 방법을 사용할 땐 이러한 점을 고려해야 한다. . | 이는 모두 용매의 극성, 용매의 농도, pH, 시료의 온도 등 용매의 특성으로 인한 흡광도의 변화다. . | . &#45824;&#54364;&#51201;&#51064; &#50857;&#47588; . 용매로 쓰이는 물질로는 대표적으로 아래의 표와 같이 D.W., Hexane, 에탄올, 메탄올, Cyclohexane, Chloroform, DMSO(Dimethylsulfoxide), 아세톤 등이 있다. . &#54620;&#44228;&#54028;&#51109;(cut off) . 한계 파장(cut off)이란, 흡광이 일어나는 부분이다. 용매에는 각자 자신의 한계파장(cut off)을 가진다. 이 한계파장 이상의 파장을 가지게 되면 흡광이 가능하다. 카페인을 분석하려고 할 때, 아세톤을 넣으면 흡광되지 않는데, 카페인은 270nm부근에서 흡광이 가능한데, 331nm부근이 한계파장인 아세톤에 흡광 가능한 파장이 묻혀서 흡광이 되지 않는다. 그러므로 아세톤을 용매로 사용하는 것은 부적절하다고 볼 수 있다. 따라서 한계파장을 반드시 알아야 시료에 대한 분석이 가능하다. . &#48708;&#44277;&#50976; &#51204;&#51088;&#50640; &#51032;&#54620; &#45824;&#52404; &#54952;&#44284; . case: butylphenol . 페놀은 방향족에 hydroxyl group(-OH기)이 붙은 것이다. 페놀에서 수소가 빠져나가면 음이온의 상태가 되는데, 수소이온의 탈주로 인해 수소이온의 농도가 높아져 pH에 변화가 생긴다. 따라서 흡광도가 높아지게 된다. 보라색 그래프가 해당 파장의 모습을 보여주고 있다. . . case: aniline . aniline과 anilium salt의 경우도 마찬가지라고 할 수 있다. . . 물 속에서의 이온 상태는 화학 구조가 바뀐 것이 아닌 수소 이온이 붙고 떨어지는 상태의 변화이다. 따라서 이로 인한 흡광도 변화가 발생할 수 있다. . &#960; Conjugation &#54952;&#44284; . 이중결합의 개수에 따라서도 흡광의 양과 패턴이 달라진다. 이중결합은 흡광을 잘하는 구조다. . &#54872;&#44221;&#48516;&#49437;&#50640;&#49436;&#51032; &#55137;&#44305;&#46020; &#52769;&#51221; . 인, 질산, 아질산 등의 무기물도 UV 측정이 가능하지만, 그 자체로는 잘 측정 되지 않는다. 이들은 이온인데, 이온은 무색이다. 따라서 이온을 발색시약(염료)과 반응을 시켜야 한다. 즉, 발색시료를 담은 후, 표준용액을 제조하고 미지시료를 만들어 발색에 들어간다. 이렇게 하면 미지시료가 특정 파장을 띄게 되어 흡광이 가능하게 된다. 먹는 물과 공기, 중금속 여부, 박테리아, 대장균 등 많은 것들이 이렇게 검사된다. . &#55137;&#44305;&#46020; &#52769;&#51221;&#51032; &#50696; . &#48268;&#44992; &#50976;&#53685;&#44592;&#54620; . 벌꿀은 변하지 않으므로 유통기한이 없다. 그럼에도 유통기한이 정해져 있다. 이는 fructose의 변하는 정도를 기준으로 한 것이다. 벌꿀은 시간이 지남에 따라 HMF라는 물질을 생성해낸다. HMF는 유독한 물질은 아니다. 다만, 온도가 높거나, 오래되면 HMF가 증가되는데, 이를 UV로 검출한다. HMF는 위 그림에서와 같이 산소가 많고 이중 결합이 있어서 흡광이 잘 된다. 290nm부근에서 흡광이 가장 높은데, 벌꿀1이 벌꿀2보다 해당 부근에서의 흡광도가 높으므로 벌꿀1이 더 오래된 벌꿀인 것을 알 수 있다. . &#50976;&#49324;&#49437;&#50976; &#49324;&#44256; . 해당 사고는 유사석유 때문에 발생한 것. 자동차는 휘발유에 적합하게 설계되어 있는데, 유사석유는 자동차 부품을 망가지게 한다. 또한 가스 성분도 달라지므로 위험하다. 이 사고는 판매점이 본사가 제공한 석유가 아닌 유사석유를 판매하여 발생하였으므로 본사가 암행어사처럼 불시에 판매점을 검사하는 방식을 쓰는데, 이때 UV 검사가 시행된다. 표준용액과 미지시료를 검사하는 것. 즉, 본사의 것과 판매장에서의 것을 검사한다. 흡광도가 다르면 희석되었거나 다른 물질이라는 것이 드러나게 된다. . Reference . https://ko.wikipedia.org/wiki/자외선 | https://m.blog.naver.com/PostView.nhn?blogId=nanomate&amp;logNo=110161377030&amp;proxyReferer=https:%2F%2Fwww.google.com%2F | .",
            "url": "https://tfedohk.github.io/dohk/Chemistry-absorbance/",
            "relUrl": "/Chemistry-absorbance/",
            "date": " • Sep 15, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "NGS Application-Variant Calling",
            "content": "Introduction . NGS 기계를 통해 얻은 raw data는 기본적으로 리눅스 시스템에서 처리된다. 이때 사용되는 툴킷은 대표적으로 broad institute에서 만든 GATK가 있다. 이번 노트에서는 NGS의 여러 응용(Application) 중 Variant calling에 대해 다룬다. 본 자료는 cornell university의 workshop자료를 기반으로 한다. . Variant Calling . &#51221;&#51032; . variant는 유전적변이를 의미한다. (네이버 사전) variant call은 genome 혹은 transcriptome에서 reference genome과 뉴클레오타이드 서열에 차이가 있는지를 살펴보는 것을 말한다. 즉, reference genome의 시퀀스와 대상 genome 시퀀스 상의 변화를 찾아낸다. 즉, SNP를 찾아낸다. . SNP란 인구 집단에서 1% 이상의 빈도로 존재하는 2개 이상의 대립 염기서열이 발생하는 위치를 말한다. 각 샘플의 Read data (D)로부터 샘플의 Genotype (T)을 알아내려면 Genotype이 나올 확률을 Bayesian rule을 이용하여 계산하게 된다. SNP 외에 염기서열 상의 insertion, deletion 등의 mutation도 찾아낸다. . Individual 1은 시퀀스를 하려는 특정한 사람의 DNA. 혹은 정상세포에서 얻은 DNA, Individual 2는 또 다른 사람의 DNA, Individual 3는 암 환자에게서 추출한 세포에서 얻은 DNA라고 가정해보자. 이렇게 서로 다른 세포에서 얻은 두 genome의 차이를 살펴, 암을 유발하는 사이트를 알아내려는 것이 목적이다. 보통 휴먼지놈은 30억 bp다. 이를 통째로 시퀀싱 하지 못하므로, 잘게 잘라낸다. 이를 통해 작은 read들을 NGS를 통해 얻어내고 그 결과들을 이어붙여 원래의 whole genome 시퀀스를 확보한다. 그 후에 상호 간의 시퀀스를 비교한다. 이러한 과정들은 사람이 직접 할 수 없으므로 프로그램에 맡긴다. NGS 기계에서 최종적으로 나오는 output은 FASTQ 포맷의 파일이며 그 예는 다음과 같다. FASTQ에 대해서는 후반부에 다룬다. . 이런 류의 파일을 모은 후, FASTQ 파일에 있는 데이터들에 대한 align을 수행하게 된다. 중첩된 것들은 따라가면서 전체 시퀀스를 어우르게 된다. . reference genome sequence는 휴먼 지놈 프로젝트를 통해 밝혀진, 이미 알려진 genome sequence다. 사람에 대한 reference sequence는 이미 존재하므로 이를 기반으로 FASTQ 파일로부터 align된 시퀀스들을 reference sequence로 맵핑한다. 이 과정에서 GATK가 사용된다. . GATK . NGS 기계를 통해 얻은 raw data는 GATK 툴킷으로 주로 처리된다. GATK 외에 SAMtools, glfTools, Atlas2가 있다. GATK는 Bayesian 모델을 이용하고, 알고리즘은 MapReduce를 이용하여 분산 처리가 가능하다는 장점이 있다. GATK는 java program으로 짜여져 있다. 휴먼 지놈 프로젝트는 2000년대에 완성되었다. 그 후, 1000 명에 대한 genome sequencing 즉, 1000 genome project가 진행되었고 현재는 종료된 상태다. 이때 발생한 패키지가 GATK다. 자바로 짜여진 프로그램이며, command-line의 툴이기 때문에 명령창에서 명령어를 입력해야 사용할 수 있다. 추가적으로 명령어 뒤의 옵션에 따라 다음의 일을 수행할 수 있다. . NGS data processing | variant discovery | variant filtering | genotyping | evaluation(평가 기능) | parallel processing on HPC clusters(병렬 처리 기능) 병렬 처리 일반적인 소프트웨어는 하나의 CPU에 하나의 코어를 점유한다. 즉, 싱글 코어를 사용한다. 그러나 병렬 처리를 한다는 것은 여러 코어(또는 여러 쓰레드)를 점유하여 빠르게 처리하는 것을 말한다. 즉, 계산할 데이터를 나누어 각 CPU 코어에 계산을 맡긴다. 이때 CPU 내의 여러 코어를 사용할 수도 있고, 쓰레드를 사용할 수도 있다. | GATK 실행 시, 명령 옵션을 통해 쓰레드 수를 지정할 수 있다. | 그러나 단순히 쓰레드 수를 늘린다고 속도가 높아지는 것은 아니다. 즉, 쓰레드 수에 따라 선형적인 성능을 보장하지 않는다. 이는 오버헤드가 발생하기 때문이다. 일을 나누어주는 것 자체가 일이며, 분산시킨 작업의 결과를 취합하는 것 또한 CPU에겐 부담이다. 따라서 여러 코어, 여러 쓰레드를 쓰는 것이 선형적인 성능을 보장하지 않는다. 일반적으로 8~10개 정도가 적당하다. | . | . | . GATK에 대한 BEST practice는 다음의 사이트에서 참고할 수 있다; https://gatk.broadinstitute.org/hc/en-us . NGS data Analysis Pipeline . NGS 데이터를 처리하기 위한 일련의 과정을 파이프라인으로 정의할 수 있다. 각 과정에서는 서로 다른 소프트웨어가 쓰일 수 있으며 어떤 소프트웨어의 output이 검증 과정을 거친 후 다른 소프트웨어의 input이 된다. 즉, input으로 raw data를 주면 자동으로 다음 단계들을 알아서 실행하여 최종적으로 원하는 output이 나오도록 설계하는 것을 파이프라인이라고 한다. 일련의 작업들을 알아서 수행하는 매크로와도 같은 개념이다. 이렇게 파이프라인 만드는 것이 BI 회사들이 주로 하는 일이다. 파이썬, 쉘 스크립트 등을 이용하여 이러한 파이프라인을 구축할 수 있다. . A. Data Cleanup . . 먼저, NGS 기계로부터 raw reads를 받는다. 이 데이터는 fastq 포맷의 파일이다. | 그 다음엔 해당 파일 내의 데이터를 전처리한다. 불필요한 부분을 잘라내고, 필요한 부분만을 추려내는 과정이다 (실제 사용 예는 하단에 있음). 이렇게 처리된 데이터의 quality를 검증한 후, BWA 소프트웨어를 이용하여 Reference mapping을 수행한다. | Alignment(또는 Mapping)가 완료된 후에는 sorting을 수행한다. sorting이 필요한 이유는 인덱싱 작업을 하기 위해서다. 데이터베이스 상에서 인덱싱 된 데이터일 경우 빠르게 검색 가능하기 때문이다. 이때 picard 소프트웨어가 쓰인다. 이는 다음 작업인 duplicate를 제거하는 작업을 빠르게 한다. | . | duplicate를 체크하고, 제거한다. 과정 4까지는 Non-GATK 즉, GATK가 쓰이지 않는다. 과정 5, 6은 GATK가 쓰인다. | . | 그 후 indel(insertion-deletion) realignment 처리 후, | base recalibration을 수행 과정 6까지 끝나고 난 output: analysis-ready reads. | 이로써 Variant Discovery를 위한 기본적인 준비는 끝이 났다. | . | pair of FASTQ files . 위 그림은 각 샘플에 대한 작업을 의미한다. 모든 과정에서, 샘플은 하나가 아닌 여러 샘플을 동시에 처리하는 경우가 대부분이다. 사람마다 genome은 다른데 reference sequence는 딱 하나다. 즉, 질병에 의한 variaion 뿐만 아니라 사람 간의 variation도 존재한다. 우리의 목적이 무엇이냐에 따라 다르겠으나, (어떠한 genotype이 어떠한 phenotype을 나타내는지에 관심이 있는 경우도 있다.) 주로 질병 치료, 진단 등이 목적이 된다 (돈이 되기 때문). 즉, 정상과 비정상간의 variant calling이 주 목적이다. 이때 사람 간의 variation은 무시해야 하므로, 통계적 유의미성 확보를 위해 굉장히 많은 샘플을 이용해야 한다. 따라서 몇 백~몇 천 명의 샘플이 필요하다. 따라서 각 샘플은 동일한 파이프라인을 거치게 된다. . B. Variant Discovery . 처리한 것들을 묶어서 variant calling을 수행한다. 이를 통해 샘플 간 정상과 비정상간의 SNP를 알 수 있다 (몇 번 크로모솜의 어느 site에서 변이가 일어났는지, indel(insertion, deletion)이 일어났는지 등). Data Cleanup, Variant Discovery 과정까지가 bioinformatics의 영역이라고 할 수 있다. . C. Evaluation . Evaluation 단계는 연구자들 또는 의사들의 영역이라고 할 수 있다. 즉, 결과물로 나온 SNP가 의미가 있는 SNP인지 의미가 없는 SNP인지에 대한 판단을 수행한다. 예를 들어, 특정 역할을 하는 단백질, 이를 테면 kinase(신호 전달 체계의 핵심 역할을 하는 단백질)가 있다고 해보자. 이 단백질에 뮤테이션이 발생하여 SNP로 드러나면 해당 SNP가 단백질의 구조에 어떠한 영향을 얼마나 주는지에 대해 판단해야 한다. 즉, 뉴클레오타이드 A가 T로 변화되었고, 이로 인해 아미노산이 Lue에서 Glu으로 바뀌었다면, 해당 단백질의 activity에 영향이 있는가, 없는가를 판단해야 한다. 이를 통해 &quot;해당 SNP에 의한 특정 단백질의 활성화로 인해 암이 발생할 확률이 있다.&quot;는 식으로 시나리오를 짜볼 수 있겠다. 그러나, SNP는 한두 개 정도가 나오는 게 아니다. 정상 세포와 비정상(암) 세포 간 SNP, indel은 굉장히 많이 발생한다. 이로 인해 false positive들이 상당히 많이 발생할 수 있다. 이 false positive를 가려내는 것이 관건이다. 또한, SNP를 발견하여 단백질의 activity를 알아보기 위해서는 실제로 mutation을 도입한 후 클로닝하여 단백질 발현을 통해 activity 테스트를 해야한다. SNP가 한, 두 개 발생하는 것이 아니기 때문에 이 모든 경우를 전부 테스트 할 수는 없다는 한계가 있다. 따라서, 이 부분에 인공지능이 개입할 여지가 있으며 실제로 인공지능을 도입하려는 시도들이 많이 이루어지는 추세다. 인공지능을 통해 정상 세포가 암 세포로 전이될 확률 등을 알아낼 수 있다면, 의사들과 연구자들의 빠른 의사결정에 도움을 줄 수 있을 것이다. . FASTQ . FASTQ는 NGS 기계의 output으로 주어지는 데이터 파일이다. 이 파일의 생김새는 아래와 같다. FASTA 포맷과 다른 점은 &gt;기호 대신 @기호가 쓰인다는 점, :으로 필드가 나누어지는 점, 해당 시퀀스에 대한 인포메이션의 형식(FASTQ는 몇 번째 read고 어떤 플랫폼으로 시퀀싱 된 것인지에 대한 정보를 담고 있다.), 그리고 단 네 줄로만 이루어진다는 점이다. 또한, FASTA 포맷은 첫번째 줄의 시퀀스에 대한 설명 이후 뉴클레오타이드 또는 아미노산 서열만이 나열되는 데에 비해 FASTQ 포맷은 두 번째 줄에 실제 NGS를 통해 나온 서열이 위치하며, 네번째 줄에 정확도를 나타내기 위한 데이터가 나열된다. +는 optional이며, 부가적인 다른 인포메이션을 적을 수 있다. . accuracy . A라고 시퀀싱 된 것을 얼마나 신뢰할 수 있을까? 네 번째 줄을 보면 C로 표기된 것을 볼 수 있다. 이는 정확도를 나타내는 지표이다. 네 번째 줄의 각 알파벳을 아스키 코드로 바꾼 후 -33을 더하면 phred quality score가 나오게 된다. . 아스키 코드 American Standard Code Information Interchange | 영어 알파벳 a-z, 외 특수 기호들에 대하여 컴퓨터가 인식 가능하도록 숫자로 바뀐, 코드화 된 것을 말함 | A: 65, B: 66, C: 67, ... | . | . 네 번째 줄의 B를 예로 들자. B의 아스키 코드는 66이다. phred quality score는 -33을 한 값인 -33. 이때 quality score가 30이면 accuracy는 9가 3개인 99.9%를 의미한다 (40이면 99.99%, 50이면 99.999%). -33이므로, 99.9% 이상을 의미한다. 당연하게도 아스키 코드 값이 높아질수록 quality score가 높아진다고 이해할 수 있다. . paired-end (PE) reads . Illumina NGS 플랫폼에서 만들어진 read는 paired-end (PE) 형태이다. 즉, 하나의 서열을 양 옆에서 읽어들이는 방식이다. 이 때의 서열은 다음과 같다. forward(left) 방향으로 읽은 서열엔 1, backward(right) 방향으로 읽은 서열엔 2가 마킹된 것을 볼 수 있다. 상황과 목적에 따라 1로 마킹된 것들만 묶어서 하나의 파일로, 2로 마킹된 것들만 묶어서 하나의 파일로, 또는 1과 2 둘다 모두 들어있는 파일로 만들어 활용할 수 있다. . Data Cleanup: trimmomatic.jar . data cleanup 단계에서 raw data를 cleanup하라는 명령이다. trimmomatic.jar라는 자바 프로그램을 이용하며 역시 커맨드 라인에서 수행된다. . Reference . https://biohpc.cornell.edu/lab/doc/Variant_workshop_Part1.pdf | https://3months.tistory.com/234 | http://www.incodom.kr/GATK/VariantCalling | .",
            "url": "https://tfedohk.github.io/dohk/NGS--Variant-Calling/",
            "relUrl": "/NGS--Variant-Calling/",
            "date": " • Sep 11, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://tfedohk.github.io/dohk/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "저는 대전 소재의 한국과학기술정보연구원(KISTI)의 과학데이터분석연구실에서 기상 데이터를 분석하는 연구에 참여연구원으로 일한 경력이 있습니다. 이때 처음으로 인공지능의 기술 분야 중 하나인 머신러닝을 접하였고 머신러닝을 혼자 공부해 나가면서 재미있는 분야라 생각하였습니다. 특히, 이때 얻은 귀중한 점 두 가지는 첫째로 머신러닝에서 핵심적으로 쓰이는 gradient descent를 수학적인 배경지식 이해부터 알고리즘 구현까지 스스로 해내었다는 점, 둘째로 학부에서 배웠던 수학이 실제로 눈앞에서 활용되는 모습을 통해 수학의 중요성과 수학 공부의 즐거움을 느꼈다는 점입니다. 이후 저는 관련 공부를 더 이어가고자 하였고, 모교의 대학원에 진학하여 딥러닝과 강화학습을 이용하여 다양한 프로젝트를 진행했습니다. (제가 진행했던 프로젝트에 대한 결과물은 이력의 첨부영역에 있습니다.) . 제가 인공지능 분야를 공부하면서 느낀 점은 인공지능은 결국 도구에 불과하다는 점입니다. 즉, 어떤 도메인에 인공지능을 적용하여 가치를 창출할지에 대한, 일종의 가치 판단의 문제가 생기게 됩니다. 저는 석사 수료 상태로 잠시 진로를 돌아보는 와중에 바이오인포매틱스 분야를 접하게 되었고, BT에 IT를 접목하고 싶다는 생각을 가지게 되었습니다. . 관심분야 . 인공지능(Artificial Intelligence; 머신러닝(ML), 딥러닝(DL), 강화학습(RL)) 생명정보학(Bioinformatics) . 이력 . 2012.03 ~ 2017.08 &gt; 한국기술교육대학교 컴퓨터공학부 학사 과정 | 2016.01 ~ 2016.06 &gt; 한국과학기술정보연구원(KISTI) 대전 본원 참여연구원 | 2017.09 ~ 2019.08 &gt; 한국기술교육대학교 창의융합공학협동과정 ICT융합 석사 과정 | 2018.07 ~ 2020.08 &gt; 한국기술교육대학교 능력교육개발원 보조강사 | 2019.09 ~ 2019.12 &gt; 대한상공회의소 충북인력개발원 시간강사 | 2020.03 ~ &gt; 성남 폴리텍대학 하이테크 생명정보시스템 과정 | . 학력사항 . 2012.03 ~ 2017.08 &gt; 한국기술교육대학교 컴퓨터공학부(CSE) 학사 졸업 총 이수 학점: 156 | 총 학점: 3.4 / 4.5 | 전공 학점: 3.32 / 4.5 | . | 2017.09 ~ 2019.08 &gt; 한국기술교육대학교 창의융합공학협동과정 ICT융합 석사 수료 총 이수 학점: 30 | 총 학점: 4.5 / 4.5 | 작성 논문: [첨부1] | . | . 경력 및 대외활동 . 2020.03.01 ~ &gt; 성남 폴리텍대학 하이테크 생명정보시스템 과정 | 2019.09.23 ~ 2019.12.17 &gt; 대한상공회의소 충북인력개발원 시간강사 | 부서: 전기시스템제어 | 과정명: PLC전문가과정 | 교과목명: 펌웨어프로그래밍실무 | . | 2018.07 ~ 2020.08 &gt; 한국기술교육대학교 능력교육개발원 보조강사 (Assistant Instructor) | 담당 과목: [첨부2] | . | 2016.01.01 ~ 2016.06.30 &gt; 한국과학기술정보연구원(KISTI) 대전 본원 참여연구원/학생연구원 (Graduate Student Research Assistant) | 부서: 과학데이터분석연구실 | 주요업무: 데이터 분석 | . | . 자격증 . 워드프로세서 1급 / 대한상공회의소 / 2005.10.21 | 운전면허 1종 / 대전지방경찰청 / 2016.08.05 | 정보처리기사 / 한국산업인력공단 / 2017.05.26 | 훈련교사자격증 3급 1호 / 고용노동부 / 2019.07.26 정보기술개발 | 통신서비스 | 전자기기개발 | 전자기기일반 | . | . [첨부1] . 한국기술교육대학교 창의융합공학협동과정 석사 과정 작성 논문 . “Time Series Classification of Cryptocurrency Price Trend Based on a Recurrent LSTM Neural Network, “ JIPS(Journal of Information Processing Systems), Volume: 15, No: 3, Page: 694 ~ 706, Year: 2019, 10.3745/JIPS.03.0120 / 1저자 | “Unity 3D 기반 다중 에이전트 강화학습 환경 구현, “ 2019.06, 한국통신학회 | “분산 A3C를 활용한 회전식 도립 진자 시스템 설계, “ 한국정보처리학회, VOL 26 NO. 01 PP. 0493 ~ 0495 2019. 05 / 1저자 | “Deep Q-Network Based Rotary Inverted Pendulum System and Its Monitoring on the EdgeX Platform, “, IEEE Access, 2019.02 / https://ieeexplore.ieee.org/document/8668979 / 2저자 | “A3C를 활용한 블록체인 기반 금융 자산 포트폴리오 관리, “ 2019.01, 한국정보처리학회 | “EdgeX Foundry 기반의 IoT 제어 시스템 구현, “ 한국정보처리학회, VOL 25 NO. 02 PP. 0995 ~ 0997 2018.11 / 1저자 | “강화학습을 이용한 회전식 도립전자 시스템 설계, “, 한국정보처리학회, VOL 25 NO. 02 PP. 0705 ~ 0707 2018. 11 / 2저자 | “그래디언트 부스팅을 활용한 암호화폐 가격동향 예측, “ 정보처리학회논문지, 2018.10 / 2저자 | “암호화폐 가격 정보 데이터에 대한 상관관계분석 및 회귀테스트, “ 한국정보처리학회, VOL 25 NO. 01 PP. 0346 ~ 0349 2018. 05 / 1저자 / 우수논문상 수상 | “Recurrent Neural Network을 이용한 플로우 기반 네트워크 트래픽 분류, “, 2017.07, 한국정보처리학회 | . [첨부2] . 한국기술교육대학교 능력교육개발원 보조강사 담당 과목 . 20.08.10 - 20.08.14 &gt; 데이터 마이닝과 빅데이터 분석 기초 및 응용 | 20.08.03 - 20.08.07 &gt; PyTorch와 Azure로 함께 도전하는 인공지능 입문 | 20.06.06 - 20.06.07 &gt; 엑셀을 활용한 빅데이터 분석 기초 | 20.05.23 - 20.05.24 &gt; 융합기술 기반 SW개발자를 위한 웹 프로그래밍 1 | 20.01.20 - 20.01.21 &gt; Python 프로그래밍 기초 | 20.01.13 - 20.01.17 &gt; Keras 코딩 하며 배우는 생성적 적대 신경망(GAN) 입문 | 19.12.30 - 20.01.03 &gt; Azure와 Keras로 함께 풀어보는 인공지능 실전 프로젝트 | 19.12.21 - 19.12.22 &gt; Excel BI를 이용한 빅데이터 가공 기초 | 19.11.30 - 19.12.01 &gt; IT시스템 통합운영 및 시스템 유지보수 관리 | 19.11.23 - 19.11.24 &gt; Excel BI를 이용한 빅데이터 가공 기초 | 19.08.12 - 19.08.16 &gt; Power BI를 활용한 빅데이터 분석과 시각화 | 19.08.05 - 19.08.09 &gt; 텐서플로우로 풀어보는 6가지 중급 인공지능 프로젝트 | 19.07.29 - 19.08.02 &gt; 사물인터넷 구현을 위한 아두이노 기초 실습 | 19.07.22 - 19.07.26 &gt; 엑셀로 배우는 빅데이터 분석 이론 및 실습 | 19.06.29 - 19.06.30 &gt; 딥러닝을 활용한 자연어 처리 | 19.06.08 - 19.06.09 &gt; Linux 기초와 Apache Hadoop설치 | 19.05.25 - 19.05.26 &gt; PYTHON 프로그래밍 기본 | 19.01.14 - 19.01.18 &gt; 텐서플로우로 익히는 딥러닝 이론과 구현 | 18.07.23 - 18.07.27 &gt; 머신 러닝 기술의 이해 및 실습 | . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://tfedohk.github.io/dohk/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://tfedohk.github.io/dohk/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}